var searchData=
[
  ['sample',['sample',['../da/d8b/namespaceKTfwd.html#aa6deed1f4f76065693c4ef5e3fcdd27a',1,'KTfwd::sample(const gsl_rng *r, const container_type&lt; gamete_type, allocator_t &gt; &amp;gametes, const unsigned &amp;n, const unsigned &amp;N)'],['../da/d8b/namespaceKTfwd.html#a3f3c955c9e3f8eca9c1c75d2f698caa9',1,'KTfwd::sample(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a2ea030c4effb17f301440ce1f96c2e1f',1,'KTfwd::sample(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed, const std::vector&lt; std::pair&lt; double, double &gt;&gt; &amp;locus_boundaries=std::vector&lt; std::pair&lt; double, double &gt;&gt;())'],['../da/d8b/namespaceKTfwd.html#a5ceee18fb64896ad58f7b142a0d6b05a',1,'KTfwd::sample(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a36562944eda71ce81e758ebd470f3fe6',1,'KTfwd::sample(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed, const std::vector&lt; std::pair&lt; double, double &gt;&gt; &amp;locus_boundaries=std::vector&lt; std::pair&lt; double, double &gt;&gt;())'],['../da/d8b/namespaceKTfwd.html#ade392950bd45b9f9699446c1e7f03ad5',1,'KTfwd::sample(const gsl_rng *r, const poptype &amp;p, const unsigned deme, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a68c0972ead7cbc1d42795402365aae4b',1,'KTfwd::sample(const poptype &amp;p, const unsigned deme, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)']]],
  ['sample_5fdiploid',['sample_diploid',['../da/d8b/namespaceKTfwd.html#a9fa8c6fd5d6b79550163c64a6cb0353a',1,'KTfwd::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double f=0., const mutation_removal_policy mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#a9050228a0448ab4b11edc6ab97de1236',1,'KTfwd::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const uint_t &amp;N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double f=0., const mutation_removal_policy mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#adfda50265c25d2cedf2a7edebbbe0eac',1,'KTfwd::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, metapop_diploid_vector_type&lt; diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt;, metapop_diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t *N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function_container &amp;ffs, const migration_policy &amp;mig, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double *f=nullptr, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#adedab279f9eb545a11540f002988c8b5',1,'KTfwd::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, metapop_diploid_vector_type&lt; diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt;, metapop_diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t *N_curr, const uint_t *N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function_container &amp;ffs, const migration_policy &amp;mig, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double *f=nullptr, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#afb16be21e70056fd957c396846318cbf',1,'KTfwd::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const uint_t &amp;N_next, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#a9da3a24dad90cbcadf6c10015192012a',1,'KTfwd::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#a59b220ae76e4e48b536bd69e19c76f10',1,'KTfwd::experimental::sample_diploid(const gsl_rng *r, gcont_t&lt; gamete_type, gcont_t_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mcont_t&lt; mutation_type, mcont_t_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const unsigned &amp;N_curr, const unsigned &amp;N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0., popmodel_rules &amp;&amp;pmr=popmodel_rules(), const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#af26b75add2fe106580da2d9b5cbeb058',1,'KTfwd::experimental::sample_diploid(const gsl_rng *r, gcont_t&lt; gamete_type, gcont_t_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mcont_t&lt; mutation_type, mcont_t_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const unsigned &amp;N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0., popmodel_rules &amp;&amp;pmr=popmodel_rules(), const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#a7fda56db6337b6d9bd216bcfb0efad68',1,'KTfwd::experimental::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const uint_t &amp;N_next, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, rules_type &amp;&amp;rules=rules_type(), const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#a9ba706052e008695050fa6f1a4d6cc8d',1,'KTfwd::experimental::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, rules_type &amp;&amp;rules=rules_type(), const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())']]],
  ['sample_5findividuals',['sample_individuals',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#a1a0bf6b06cf8847e172e1ee615e9cf80',1,'KTfwd::fwdpp_internal']]],
  ['sample_5fseparate',['sample_separate',['../da/d8b/namespaceKTfwd.html#a3f3268aa00e86dfe4494dee4adf46a23',1,'KTfwd::sample_separate(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed, const std::vector&lt; std::pair&lt; double, double &gt;&gt; &amp;locus_boundaries=std::vector&lt; std::pair&lt; double, double &gt;&gt;())'],['../da/d8b/namespaceKTfwd.html#ab9d068558ea33f5441a4e652855a122e',1,'KTfwd::sample_separate(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#abb8f5c9c5c2011b4e59fadf8729f602b',1,'KTfwd::sample_separate(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#ab134992de159345a2205d7a6ca2e1e33',1,'KTfwd::sample_separate(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed, const std::vector&lt; std::pair&lt; double, double &gt;&gt; &amp;locus_boundaries=std::vector&lt; std::pair&lt; double, double &gt;&gt;())'],['../da/d8b/namespaceKTfwd.html#a6b93bc0c77167d7a97d94a5caf449e22',1,'KTfwd::sample_separate(const gsl_rng *r, const poptype &amp;p, const unsigned deme, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#ade1bde6ce433e20ba2003777ed140038',1,'KTfwd::sample_separate(const poptype &amp;p, const unsigned deme, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)']]],
  ['serialize',['serialize',['../d0/d8e/structKTfwd_1_1serialize.html#a937d57bce91c9ea44ae680c23ee0a05b',1,'KTfwd::serialize::serialize()'],['../d0/d8e/structKTfwd_1_1serialize.html#a40f5db4533407be0605997e9dccd4892',1,'KTfwd::serialize::serialize(serialize &amp;&amp;)=default']]],
  ['setstate',['setstate',['../d6/d57/serializationTest_8cc.html#a78d5641bac577cac114c3bdd3f743bd5',1,'serializationTest.cc']]],
  ['setup3locus2',['setup3locus2',['../d9/d1d/mlocusCrossoverTest_8cc.html#a51faea78454ba8c03b79dd0436cce855',1,'mlocusCrossoverTest.cc']]],
  ['shmodel',['shmodel',['../db/dbe/structKTfwd_1_1extensions_1_1shmodel.html#aaa049c7b1aab90734b178a1143cf8398',1,'KTfwd::extensions::shmodel::shmodel()=default'],['../db/dbe/structKTfwd_1_1extensions_1_1shmodel.html#a322431c3670c0c21044f70205c11747e',1,'KTfwd::extensions::shmodel::shmodel(std::function&lt; double(const gsl_rng *)&gt; sfxn, std::function&lt; double(const gsl_rng *)&gt; hfxn)']]],
  ['simulate',['simulate',['../d5/d07/sugar__metapop__custom__diploidTest_8cc.html#a1e606ae3de9354470917a1fc1ec852c3',1,'simulate(poptype &amp;pop):&#160;sugar_metapop_custom_diploidTest.cc'],['../d5/d38/sugar__multilocusTest_8cc.html#a1e606ae3de9354470917a1fc1ec852c3',1,'simulate(poptype &amp;pop):&#160;sugar_multilocusTest.cc']]],
  ['singlepop',['singlepop',['../d5/d74/classKTfwd_1_1sugar_1_1singlepop.html#a4366900f7c9bb751630f34e9f6f0d3ab',1,'KTfwd::sugar::singlepop']]],
  ['singlepop_5fpopgenmut_5fcustom_5ffixture',['singlepop_popgenmut_custom_fixture',['../da/d9a/structsinglepop__popgenmut__custom__fixture.html#aae537f9bc21885fd7046e3a6aac5e8c8',1,'singlepop_popgenmut_custom_fixture']]],
  ['singlepop_5fpopgenmut_5ffixture',['singlepop_popgenmut_fixture',['../dc/d11/structsinglepop__popgenmut__fixture.html#a298e992f0b963801c2bcbc9dec35d984',1,'singlepop_popgenmut_fixture']]],
  ['split_5fdeme',['split_deme',['../dc/d14/group__demography.html#ga9841929c1b170199d4dfc104392b9cb1',1,'KTfwd']]],
  ['split_5fdeme_5fdetails',['split_deme_details',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#a3a57bffe0f73432ae388539c1d42cebe',1,'KTfwd::fwdpp_internal']]],
  ['split_5fdeme_5fno_5freplacement',['split_deme_no_replacement',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#a1ba15bf6ba947ba609e8ee4c973e58a8',1,'KTfwd::fwdpp_internal']]],
  ['split_5fdeme_5freplacement',['split_deme_replacement',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#a8220a2631128c1a8336f4c231a000748',1,'KTfwd::fwdpp_internal']]],
  ['split_5fpop',['split_pop',['../da/d8b/namespaceKTfwd.html#a1269206f37a8af782c348df38b926767',1,'KTfwd']]],
  ['spop_5fderived',['spop_derived',['../de/d68/structspop__derived.html#ab4b07b433d88aee38cd920a27a2e87e2',1,'spop_derived']]],
  ['standard_5fempty_5fmetapop_5ffixture',['standard_empty_metapop_fixture',['../db/dfa/structstandard__empty__metapop__fixture.html#ae3d704b48a1256d1f8b8a35c8dab3c0a',1,'standard_empty_metapop_fixture']]],
  ['standard_5fempty_5fmultiloc_5ffixture',['standard_empty_multiloc_fixture',['../d7/dbe/structstandard__empty__multiloc__fixture.html#abdee96fedeec9a04dc6720f25696c3ad',1,'standard_empty_multiloc_fixture']]],
  ['standard_5fempty_5fsingle_5fdeme_5ffixture',['standard_empty_single_deme_fixture',['../d4/d55/structstandard__empty__single__deme__fixture.html#adac6246f131ac753b2687e9bf7a5eeba',1,'standard_empty_single_deme_fixture']]],
  ['standardwfrules',['standardWFrules',['../dc/d8a/structKTfwd_1_1experimental_1_1standardWFrules.html#a6e8d00e04d117e88c13979d0a805f028',1,'KTfwd::experimental::standardWFrules']]],
  ['standardwfrules_5fmloc',['standardWFrules_mloc',['../d8/d1d/structKTfwd_1_1experimental_1_1standardWFrules__mloc.html#a5530fb53d3ee991302180a4f2bf67b1b',1,'KTfwd::experimental::standardWFrules_mloc']]],
  ['swap_5fdemes',['swap_demes',['../dc/d14/group__demography.html#gaf0123b287b34e04d773d224ab021067d',1,'KTfwd']]],
  ['swap_5fpops',['swap_pops',['../da/d8b/namespaceKTfwd.html#a60f658b75c95eae2bd13fcc0cd55f6e8',1,'KTfwd']]]
];
